variables:
  PACKAGE_REGISTRY_URL: "$CI_API_V4_URL/projects/$CI_PROJECT_ID/packages/generic"
  GIT_CLONE_PATH: "$CI_BUILDS_DIR/$CI_PROJECT_NAME/$CI_JOB_ID"

stages:
  - prepare
  - test
  - check
  - build
  - upload
  - publish

rust-build:linux:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/rust:latest
  needs: []
  rules:
    - changes:
      - SKB-CLI/**/*
  before_script:
    - cd SKB-CLI
  script:
    - cargo build --release
    - echo "TAG=v$(cargo pkgid | cut -d@ -f2).$CI_PIPELINE_IID" >> variables.env
  artifacts:
    paths:
      - "SKB-CLI/target/release/skb-cli"
    reports:
      dotenv: SKB-CLI/variables.env

rust-check:
  stage: check
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/rust:latest
  needs: []
  rules:
    - changes:
      - SKB-CLI/**/*
  before_script:
    - cd SKB-CLI
    - rustup component add clippy
  script:
    - cargo check --all-targets --all-features
    - cargo clippy --all-targets --all-features

rust-build:win-mingw:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/rust:latest
  needs: []
  rules:
    - changes:
      - SKB-CLI/**/*
  before_script:
    - cd SKB-CLI
    - apt update
    - apt install -qq -y g++-mingw-w64-x86-64
  script:
    - rustup target add x86_64-pc-windows-gnu
    - cargo build --target x86_64-pc-windows-gnu --release
  artifacts:
    paths:
      - "SKB-CLI/target/x86_64-pc-windows-gnu/release/skb-cli.exe"

rust-test:
  stage: test
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/rust:latest
  needs: []
  rules:
    - changes:
      - SKB-CLI/**/*
  before_script:
    - cd SKB-CLI
    - cargo install cargo-nextest --locked
  script:
    - cargo nextest run --profile ci
  artifacts:
    when: always
    reports:
      junit:
        - "SKB-CLI/target/nextest/ci/junit.xml"

upload:
  stage: upload
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/curlimages/curl:latest
  needs:
    - job: rust-build:linux
      artifacts: true
    - job: rust-build:win-mingw
      artifacts: true
    - job: rust-test
      artifacts: false
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
      changes:
        - SKB-CLI/**/*
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file SKB-CLI/target/release/skb-cli ${PACKAGE_REGISTRY_URL}/skb-cli/$TAG/skb-cli
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file SKB-CLI/target/x86_64-pc-windows-gnu/release/skb-cli.exe ${PACKAGE_REGISTRY_URL}/skb-cli/$TAG/skb-cli.exe

release:
  stage: publish
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  needs:
    - job: rust-build:linux
      artifacts: true
    - job: upload
      artifacts: false
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
      changes:
        - SKB-CLI/**/*
  script:
    - echo "running release job for $TAG.$CI_PIPELINE_IID"
  release:
    tag_name: '$TAG'
    description: '$TAG'
    ref: '$CI_COMMIT_SHA'
    assets:
      links:
        - name: skb-cli
          url: ${PACKAGE_REGISTRY_URL}/skb-cli/$TAG/skb-cli
        - name: skb-cli.exe
          url: ${PACKAGE_REGISTRY_URL}/skb-cli/$TAG/skb-cli.exe

skb-server-formatting:
  stage: check
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/maven:3-eclipse-temurin-17-alpine
  needs: []
  rules:
    - changes:
      - SKB-Server/**/*
  before_script:
    - cd SKB-Server
  script:
    - mvn formatter:validate

skb-server-pmd:
  stage: check
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/maven:3-eclipse-temurin-17-alpine
  needs: []
  rules:
    - changes:
      - SKB-Server/**/*
  before_script:
    - cd SKB-Server
  script:
    - mvn compile
    - mvn jxr:jxr
    - mvn pmd:check

skb-server-build:
  stage: build
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/maven:3-eclipse-temurin-17-alpine
  needs: []
  rules:
    - changes:
      - SKB-Server/**/*
  before_script:
    - cd SKB-Server
  script:
    - mvn clean package -DskipTests
  artifacts:
    paths:
      - "SKB-Server/target/quarkus-app"

docker-version:
  stage: prepare
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/maven:3.9.6-eclipse-temurin-17-alpine
  needs: []
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
      changes:
        - SKB-Server/**/*
  before_script:
    - cd SKB-Server
  script:
    - echo "TAG=v$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)" >> variables.env
  artifacts:
    reports:
      dotenv: SKB-Server/variables.env

docker-build:
  stage: publish
  image: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:26.1.2
  services:
    - name: ${CI_DEPENDENCY_PROXY_DIRECT_GROUP_IMAGE_PREFIX}/docker:26.1.2-dind
      alias: docker
  needs:
    - job: docker-version
      artifacts: true
    - job: skb-server-build
      artifacts: true
    - job: skb-server-formatting
      artifacts: false
  rules:
    - if: $CI_COMMIT_TAG
      when: never                                  # Do not run this job when a tag is created manually
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH  # Run this job when commits are pushed or merged to the default branch
      changes:
        - SKB-Server/**/*
  before_script:
    - cd SKB-Server
  script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
    - docker build --cache-from $CI_REGISTRY_IMAGE/skb-server:latest -t $CI_REGISTRY_IMAGE/skb-server:$TAG .
    - docker push $CI_REGISTRY_IMAGE/skb-server:$TAG
    - docker tag $CI_REGISTRY_IMAGE/skb-server:$TAG $CI_REGISTRY_IMAGE/skb-server:latest
    - docker push $CI_REGISTRY_IMAGE/skb-server:latest
